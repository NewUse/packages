--- a/CMakeLists.txt	2023-03-31 08:31:02.000000000 +0300
+++ b/CMakeLists.txt	2024-12-17 01:15:43.753325122 +0300
@@ -117,7 +117,7 @@
 
 find_package(Libevent2 REQUIRED)
 include_directories(${LIBEVENT2_INCLUDE_DIR})
-list(APPEND THIRDPARTY_LIBS ${LIBEVENT2_LIBRARIES})
+list(APPEND THIRDPARTY_LIBS ${LIBEVENT2_LIBRARIES} ${LIBEVENT2_CORE} ${LIBEVENT2_EXTRA} ${LIBEVENT2_PTHREADS_LIBRARIES})
 
 
 if(USE_MBEDTLS)
@@ -132,7 +132,7 @@
                     src/ssl/mbedtls.c
                     src/crypto/mbedtls.c
   )
-  list(APPEND THIRDPARTY_LIBS ${LIBEVENT2_MBEDTLS_LIBRARIES} ${MBEDTLS_LIBRARIES})
+  list(APPEND THIRDPARTY_LIBS ${MBEDTLS_LIBRARIES})
 else()
   find_package(OpenSSLx REQUIRED)
   include_directories(${OPENSSL_INCLUDE_DIR})
--- a/cmake/FindLibevent2.cmake	2023-03-31 08:31:02.000000000 +0300
+++ b/cmake/FindLibevent2.cmake	2024-12-17 01:12:50.515113950 +0300
@@ -1,51 +1,72 @@
+# Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
 #
-# https://github.com/sipwise/sems/blob/master/cmake/FindLibevent2.cmake
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License, version 2.0,
+# as published by the Free Software Foundation.
 #
-if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
-	FIND_PATH(LIBEVENT2_INCLUDE_DIR event2/event.h)
-
-	list(INSERT CMAKE_FIND_LIBRARY_SUFFIXES 0 .imp)
-	list(INSERT CMAKE_FIND_LIBRARY_SUFFIXES 0 .imp.lib)
-
-	if(CMAKE_CL_64)
-		FIND_LIBRARY(LIBEVENT2_LIBRARIES NAMES libevent-x64-v120-mt-2_1_4_0 event libevent )
-	else()
-		FIND_LIBRARY(LIBEVENT2_LIBRARIES NAMES libevent-x86-v120-mt-2_1_4_0 event libevent )
-	endif()
-else()
-	set(LIBEVENT2_INCLUDE_DIR_SEARCH_PATHS /usr/local/include /usr/include)
-	set(LIBEVENT2_LIB_SEARCH_PATHS /usr/local/lib /usr/lib)
-if(DEFINED Libevent2_ROOT)
-  set(LIBEVENT2_INCLUDE_DIR_SEARCH_PATHS ${Libevent2_ROOT}/include ${LIBEVENT2_INCLUDE_DIR_SEARCH_PATHS})
-	set(LIBEVENT2_LIB_SEARCH_PATHS ${Libevent2_ROOT}/lib ${LIBEVENT2_LIB_SEARCH_PATHS})
-endif()
-  # -levent -levent_core -levent_extra -levent_openssl
-  FIND_PATH(LIBEVENT2_INCLUDE_DIR event2/event.h PATHS ${LIBEVENT2_INCLUDE_DIR_SEARCH_PATHS} NO_CMAKE_SYSTEM_PATH)
-  # OpenBSD issue, lookup from /usr/local/lib to avoid lib mismatch
-  FIND_LIBRARY(LIBEVENT2_LIBRARIES NAMES event libevent PATHS ${LIBEVENT2_LIB_SEARCH_PATHS} NO_CMAKE_SYSTEM_PATH)
-  FIND_LIBRARY(LIBEVENT2_CORE_LIBRARIES NAMES event_core libevent_core PATHS ${LIBEVENT2_LIB_SEARCH_PATHS} NO_CMAKE_SYSTEM_PATH)
-  FIND_LIBRARY(LIBEVENT2_EXTRA_LIBRARIES NAMES event_extra libevent_extra PATHS ${LIBEVENT2_LIB_SEARCH_PATHS} NO_CMAKE_SYSTEM_PATH)
-  FIND_LIBRARY(LIBEVENT2_SSL_LIBRARIES NAMES event_openssl libevent_openssl PATHS ${LIBEVENT2_LIB_SEARCH_PATHS} NO_CMAKE_SYSTEM_PATH)
-  FIND_LIBRARY(LIBEVENT2_MBEDTLS_LIBRARIES NAMES event_mbedtls libevent_mbedtls PATHS ${LIBEVENT2_LIB_SEARCH_PATHS}b NO_CMAKE_SYSTEM_PATH) 
-endif()
-
-
-IF(LIBEVENT2_INCLUDE_DIR AND LIBEVENT2_LIBRARIES)
-	SET(LIBEVENT2_FOUND TRUE)
-ENDIF(LIBEVENT2_INCLUDE_DIR AND LIBEVENT2_LIBRARIES)
-
-IF(LIBEVENT2_FOUND)
-	IF (NOT Libevent2_FIND_QUIETLY)
-		MESSAGE(STATUS "Found libevent2 includes:	${LIBEVENT2_INCLUDE_DIR}/event2/event.h")
-		MESSAGE(STATUS "Found libevent2 library: ${LIBEVENT2_LIBRARIES}")
-		MESSAGE(STATUS "Found libevent2 core library: ${LIBEVENT2_CORE_LIBRARIES}")
-		MESSAGE(STATUS "Found libevent2 extra library: ${LIBEVENT2_EXTRA_LIBRARIES}")
-    MESSAGE(STATUS "Found libevent2 openssl library: ${LIBEVENT2_SSL_LIBRARIES}")
-    MESSAGE(STATUS "Found libevent2 mbedtls library: ${LIBEVENT2_MBEDTLS_LIBRARIES}")
-	ENDIF (NOT Libevent2_FIND_QUIETLY)
-ELSE(LIBEVENT2_FOUND)
-	IF (Libevent2_FIND_REQUIRED)
-		MESSAGE(FATAL_ERROR "Could NOT find libevent2 development files: ${LIBEVENT2_INCLUDE_DIR} :: ${LIBEVENT2_LIBRARIES}")
-	ENDIF (Libevent2_FIND_REQUIRED)
-ENDIF(LIBEVENT2_FOUND)
-
+# This program is also distributed with certain software (including
+# but not limited to OpenSSL) that is licensed under separate terms,
+# as designated in a particular file or component or in included license
+# documentation.  The authors of MySQL hereby grant you an additional
+# permission to link the program and your derivative works with the
+# separately licensed software that they have included with MySQL.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+IF(NOT WITH_LIBEVENT)
+  SET(WITH_LIBEVENT system)
+ENDIF()
+
+IF(WITH_LIBEVENT STREQUAL "system" OR WITH_LIBEVENT STREQUAL "yes")
+  IF(NOT WIN32)
+    SET(LIBEVENT2_INCLUDE_PATH /usr/local/include /opt/local/include)
+    SET(LIBEVENT2_LIB_PATHS /usr/local/lib /opt/local/lib)
+  ENDIF()
+
+  # use default paths
+  SET(HOW_TO_FIND)
+ELSEIF(WITH_LIBEVENT STREQUAL "bundled")
+  MESSAGE(FATAL_ERROR "bundled libevent isn't support")
+ELSE()
+  # make the users path for libevent absolute
+  GET_FILENAME_COMPONENT(LIBEVENT_ABS_DIR "${WITH_LIBEVENT}" ABSOLUTE)
+  SET(LIBEVENT2_INCLUDE_PATH ${LIBEVENT_ABS_DIR}/include)
+  SET(LIBEVENT2_LIB_PATHS ${LIBEVENT_ABS_DIR}/lib)
+
+  # if path specified, use that path only
+  SET(HOW_TO_FIND NO_DEFAULT_PATH)
+ENDIF()
+
+FIND_PATH(LIBEVENT2_INCLUDE_DIR event2/event.h PATHS ${LIBEVENT2_INCLUDE_PATH} ${HOW_TO_FIND})
+IF(WIN32)
+  ## libevent-2.0.22 on windows is only 'event.lib' and 'event.dll'
+  FIND_LIBRARY(LIBEVENT2_CORE NAMES event PATHS ${LIBEVENT2_LIB_PATHS} ${HOW_TO_FIND})
+  SET(LIBEVENT2_EXTRA)
+ELSE()
+  FIND_LIBRARY(LIBEVENT2_CORE NAMES event_core libevent_core PATHS ${LIBEVENT2_LIB_PATHS} ${HOW_TO_FIND})
+  FIND_LIBRARY(LIBEVENT2_EXTRA NAMES event_extra libevent_extra PATHS ${LIBEVENT2_LIB_PATHS} ${HOW_TO_FIND})
+  FIND_LIBRARY(LIBEVENT2_SSL_LIBRARIES NAMES event_openssl libevent_openssl PATHS ${LIBEVENT2_LIB_PATHS} ${HOW_TO_FIND})
+  FIND_LIBRARY(LIBEVENT2_PTHREADS_LIBRARIES NAMES event_pthreads libevent_pthreads PATHS ${LIBEVENT2_LIB_PATHS} ${HOW_TO_FIND})
+ENDIF()
+
+IF (LIBEVENT2_INCLUDE_DIR AND LIBEVENT2_CORE)
+  SET(LibEvent2_FOUND TRUE)
+ELSE()
+  SET(LibEvent2_FOUND FALSE)
+ENDIF()
+
+# don't expose them in the cmake UI
+MARK_AS_ADVANCED(
+  LIBEVENT2_INCLUDE_DIR
+  LIBEVENT2_CORE
+  LIBEVENT2_EXTRA
+  LIBEVENT2_SSL_LIBRARIES
+  LIBEVENT2_PTHREADS_LIBRARIES
+)
\ В конце файла нет новой строки
